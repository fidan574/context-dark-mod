{"version":3,"sources":["context/ThemeContext.js","ThemeToggler.jsx","Header.jsx","Colors.js","MainWithFunction.js","MainWithClass.jsx","App.js","reportWebVitals.js","index.js"],"names":["ThemeContext","React","createContext","themeTogglerStyle","cursor","ThemeToggler","useContext","themeMode","setThemeMode","style","onClick","title","headerStyles","padding","display","justifyContent","alignItems","Header","AppTheme","light","textColor","backgroundColor","dark","Main","theme","currentTheme","color","state","Consumer","Component","App","themeHook","useState","Provider","value","MainWithClass","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"2LAGeA,G,MADMC,IAAMC,cAAc,CAAC,QAAS,gB,qBCC7CC,EAAoB,CACtBC,OAAQ,WAYGC,EAVM,WACjB,MAAiCC,qBAAWN,GAA5C,mBAAMO,EAAN,KAAiBC,EAAjB,KACA,OACI,qBAAKC,MAASN,EAAmBO,QAAW,WAAOF,EAA2B,UAAdD,EAAuB,OAAQ,UAA/F,SACI,uBAAMI,MAAQ,eAAd,UACA,4CADA,SACyB,cAAC,IAAD,IADzB,MAC0D,UAAdJ,EAAwB,eAAO,qBCRjFK,EAAe,CACjBC,QAAS,OACTC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,UAYDC,EARA,WACX,OACI,yBAAQR,MAASG,EAAjB,UACI,6CACA,cAAC,EAAD,QCHGM,EAZE,CACbC,MAAO,CACHC,UAAW,OACXC,gBAAiB,QAErBC,KAAM,CACFF,UAAU,OACVC,gBAAiB,SCYVE,EAfF,WACT,IAAMC,EAAQlB,qBAAWN,GAAc,GACjCyB,EAAeP,EAASM,GAC9B,OACI,uBAAMf,MAAS,CACXI,QAAS,OACTQ,gBAAgB,GAAD,OAAKI,EAAaJ,iBACjCK,MAAM,GAAD,OAAKD,EAAaL,YAH3B,UAKI,oDACA,yD,4BCoBGG,E,kDA7BX,aAAe,IAAD,8BACV,gBACKI,MAAQ,GAFH,E,0CAId,WACI,OACI,cAAC,EAAaC,SAAd,UAEQ,YAAc,IAAZJ,EAAW,oBACHC,EAAeP,EAASM,GAC9B,OACI,uBAAMf,MAAS,CACXI,QAAS,OACTQ,gBAAgB,GAAD,OAAKI,EAAaJ,iBACjCK,MAAM,GAAD,OAAKD,EAAaL,YAH3B,UAMI,iDACA,yE,GAnBbS,aCcJC,MAZf,WACE,IAAMC,EAAYC,mBAAS,SAC3B,OACE,cAAC,EAAaC,SAAd,CAAuBC,MAAOH,EAA9B,SACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACI,EAAD,UCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.adc0f706.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst ThemeContext = React.createContext([\"light\", () => {}]);\r\nexport default ThemeContext;\r\n","import React,{useContext} from \"react\";\r\nimport ThemeContext from \"./context/ThemeContext\";\r\nimport {FaArrowRight} from 'react-icons/fa'\r\nconst themeTogglerStyle = {\r\n    cursor: \"pointer\"\r\n}\r\nconst ThemeToggler = () => {\r\n    const[themeMode, setThemeMode] = useContext(ThemeContext);\r\n    return(\r\n        <div style = {themeTogglerStyle} onClick = {() => {setThemeMode(themeMode === \"light\"? \"dark\": \"light\")}}>\r\n            <span title = \"switch theme\">\r\n            <h2>Theme Mode</h2>Click <FaArrowRight/>   {themeMode === \"light\" ? \"üåô\" : \"‚òÄÔ∏è\" }\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\nexport default ThemeToggler;\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// const themeTogglerStyle = {\r\n//     cursor: \"pointer\"\r\n// }\r\n// const ThemeToggler = () => {\r\n//         return(\r\n//             <div style = {themeTogglerStyle}>\r\n//             </div>\r\n//     );\r\n// }\r\n// export default ThemeToggler;\r\n","import React from \"react\";\r\nimport ThemeToggler from \"./ThemeToggler\";\r\n\r\nconst headerStyles = {\r\n    padding: \"1rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\"\r\n}\r\n\r\n\r\nconst Header = () => {\r\n    return(\r\n        <header style = {headerStyles}>\r\n            <h1>Context API</h1>\r\n            <ThemeToggler />\r\n        </header>\r\n    );\r\n}\r\nexport default Header;","const AppTheme = {\r\n    light: {\r\n        textColor: \"#000\",\r\n        backgroundColor: \"#fff\"\r\n    },\r\n    dark: {\r\n        textColor:\"#fff\",\r\n        backgroundColor: \"#333\"\r\n\r\n    }\r\n}\r\n\r\nexport default AppTheme;\r\n\r\n","\r\nimport React,{ useContext} from 'react';\r\nimport ThemeContext from './context/ThemeContext'\r\nimport AppTheme from './Colors'\r\nconst Main = () => {\r\n    const theme = useContext(ThemeContext)[0];\r\n    const currentTheme = AppTheme[theme];\r\n    return(\r\n        <main style = {{\r\n            padding: \"1rem\",\r\n            backgroundColor: `${currentTheme.backgroundColor}`,\r\n            color: `${currentTheme.textColor}`,        \r\n        }}>\r\n            <h1>Main With Function</h1>\r\n            <p>This is a paragraph </p>\r\n            \r\n        </main>\r\n    );\r\n}\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport ThemeContext from \"./context/ThemeContext\";\r\nimport AppTheme from \"./Colors\";\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {}\r\n    }\r\n    render() {\r\n        return (\r\n            <ThemeContext.Consumer>\r\n                {\r\n                    ([theme]) => {\r\n                        const currentTheme = AppTheme[theme];\r\n                        return(\r\n                            <main style = {{\r\n                                padding: \"1rem\",\r\n                                backgroundColor: `${currentTheme.backgroundColor}`,\r\n                                color: `${currentTheme.textColor}`,\r\n                            \r\n                            }}>\r\n                                <h1>Main With Class</h1>\r\n                                <p>This is a paragraph with Class</p>\r\n                                \r\n                            </main>\r\n                        )\r\n                       \r\n                    }\r\n                }\r\n            </ThemeContext.Consumer>\r\n        );\r\n    }\r\n}\r\nexport default Main;","import React, { useState } from \"react\";\nimport ThemeContext from \"./context/ThemeContext\";\nimport Header from \"./Header\";\nimport Main from \"./MainWithFunction\";\nimport MainWithClass from \"./MainWithClass\";\n\nfunction App() {\n  const themeHook = useState(\"light\");\n  return (\n    <ThemeContext.Provider value={themeHook}>\n      <div>\n        <Header />\n        <Main />\n        <MainWithClass />\n      </div>\n    </ThemeContext.Provider>\n  );\n}\nexport default App;\n\n\n\n\n// import './App.css';\n\n// function App() {\n//   const theme = \"light\"\n//   return (\n//     <ThemeContext.Provider value = {theme}>\n//       <div className=\"App\">\n//       </div>\n//     </ThemeContext.Provider>\n    \n//   );\n// }\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}